import { useState, useEffect } from "react";

import { Card, FormField, Loader } from "../components";
import { Form } from "react-router-dom";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }

  return (
    <h2 className="mt-4 text-xl font-bold uppercase text-indigo-500">
      {title}
    </h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState("");
  const [searchedResults, setSearchedResults] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);

      try {
        const response = await fetch("https://dall-e-clone-8vy3.onrender.com", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });

        if (response.ok) {
          const result = await response.json();
          setAllPosts(result?.data?.reverse());
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };

    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    const currentSearchText = e.target.value
    setSearchText(currentSearchText);

    const searchResults = allPosts.filter(
      (item) =>
        item.name.toLowerCase().includes(currentSearchText.toLowerCase()) ||
        item.prompt.toLowerCase().includes(currentSearchText.toLowerCase()),
    );

    setSearchedResults(searchResults);
  };

  return (
    <section>
      <div className="mx-auto max-w-7xl">
        <h1 className="text-3xl font-bold">The Community Showcase</h1>
        <p className="mt-2 max-w-[500px] text-neutral-600">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>

      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search posts"
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex items-center justify-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="mb-2 text-xl font-medium text-neutral-600">
                Showing results for{" "}
                <span className="text-black">{searchText}</span>
              </h2>
            )}

            <div className="xs:grid-cols-2 grid gap-3 sm:grid-cols-3 lg:grid-cols-4">
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No search results found"
                />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
